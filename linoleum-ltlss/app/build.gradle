// https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/dev/configuration/overview/
plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // shadow plugin to produce fat JARs
    // https://gradleup.com/shadow/getting-started/
    // https://gradleup.com/shadow/configuration/
    id("com.gradleup.shadow") version "8.3.6"
}

// artifact properties
group = 'es.ucm.fdi.demiourgoi'
version = '0.1.0-SNAPSHOT'
description = """Linoleum LTLss flink job"""

ext {
    javaVersion = '1.8'
    flinkVersion = '1.20.1'
    scalaBinaryVersion = '_2.13'
    slf4jVersion = '1.7.36'
    log4jVersion = '2.17.1'
    sscheckVersion = '0.5.1-SNAPSHOT'
    grpcVersion = '1.70.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


// declare where to find the dependencies of your project
repositories {
    // Use ~/.m2
    mavenLocal()
    mavenCentral()
    maven {
        url "https://repository.apache.org/content/repositories/snapshots"
        mavenContent {
            snapshotsOnly()
        }
    }
}
// NOTE: We cannot use "compileOnly" or "shadow" configurations since then we could not run code
// in the IDE or with "gradle run". We also cannot exclude transitive dependencies from the
// shadowJar yet (see https://github.com/johnrengelman/shadow/issues/159).
// -> Explicitly define the // libraries we want to be included in the "flinkShadowJar" configuration!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar
    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'org.apache.logging.log4j'
}

// declare the dependencies for your production and test code
dependencies {
    // Use Scala 2.13 in our library project
    implementation libs.scala.library

    // Use Scalatest for testing our library
    testImplementation libs.junit
    testImplementation libs.scalatest.v2.v13
    testImplementation libs.junit.v4.v13.v2.v13

    // Need scala-xml at test runtime
    testRuntimeOnly libs.scala.xml.v2.v13

    // This dependency is used by the application.
    implementation libs.guava
    implementation ("es.ucm.fdi.demiourgoi:sscheck-core_2.13:${sscheckVersion}") {
        exclude group : "org.slf4j"
    }

    // https://github.com/grpc/grpc-java/blob/master/examples/example-opentelemetry/build.gradle
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "javax.annotation:javax.annotation-api:1.3.2"

    // --------------------------------------------------------------
    // Compile-time dependencies that should NOT be part of the
    // shadow (uber) jar and are provided in the lib folder of Flink
    // --------------------------------------------------------------
    implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
    implementation "org.apache.flink:flink-clients:${flinkVersion}"
    implementation "org.apache.flink:flink-connector-base:${flinkVersion}"

    // --------------------------------------------------------------
    // Dependencies that should be part of the shadow jar, e.g.
    // connectors. These must be in the flinkShadowJar configuration!
    // --------------------------------------------------------------
    flinkShadowJar "org.apache.flink:flink-connector-kafka:3.4.0-1.20"

    testImplementation "org.apache.flink:flink-test-utils:${flinkVersion}"

    runtimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    runtimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    // Add test dependencies here.
    // testCompile "junit:junit:4.12"
}

// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar
    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar
    javadoc.classpath += configurations.flinkShadowJar
}
run.classpath = sourceSets.main.runtimeClasspath

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
}

shadowJar {
    configurations = [project.configurations.flinkShadowJar]
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = "es.ucm.fdi.demiourgoi.linoleum.ltlss.Main"

    applicationDefaultJvmArgs = []
}