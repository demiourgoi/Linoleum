/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

group = "es.ucm.fdi.demiourgoi"
version = "0.1.0-SNAPSHOT"

// TODO change jar name to  "linoleum-ltlss"
// TODO add license

plugins {
    // Apply the scala Plugin to add support for Scala.
    scala

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use ~/.m2
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation(libs.scala.library)

    // This dependency is used by the application.
    implementation(libs.guava)

    // Use Scalatest for testing our library
    testImplementation(libs.junit)
    testImplementation(libs.scalatest.v2.v13)
    testImplementation(libs.junit.v4.v13.v2.v13)

    // Need scala-xml at test runtime
    testRuntimeOnly(libs.scala.xml.v2.v13)

    val sscheckVersion = "0.5.1-SNAPSHOT"
    implementation("es.ucm.fdi.demiourgoi:sscheck-core_2.13:${sscheckVersion}") {
        exclude(group = "org.slf4j")
    }


    // https://github.com/grpc/grpc-java/blob/master/examples/example-opentelemetry/build.gradle
    val grpcVersion = "1.70.0"
    implementation("io.grpc:grpc-protobuf:${grpcVersion}")
    implementation("io.grpc:grpc-stub:${grpcVersion}")
    runtimeOnly("io.grpc:grpc-netty-shaded:${grpcVersion}")
    runtimeOnly("javax.annotation:javax.annotation-api:1.3.2")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = "es.ucm.fdi.demiourgoi.linoleum.ltlss.Main"
}
